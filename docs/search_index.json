[
["index.html", "mmir: An R-package for Simple Biological Metric Calculations Northeast Aquatic Biologists Conference 2020 1 Title Page", " mmir: An R-package for Simple Biological Metric Calculations Northeast Aquatic Biologists Conference 2020 Zachary M. Smith March 5th, 2020 1 Title Page "],
["introduction.html", "2 Introduction 2.1 Objective 2.2 What is an MMI? 2.3 Need", " 2 Introduction 2.1 Objective Demonstrate the functionality provided by the mmir R-package for calculating biological metrics for the development and/or use in an MMI or IBI. 2.2 What is an MMI? Multi-Metric Indices (MMIs) or Indices of Biotic Integrity (IBIs) are models that summarize multiple aspects of a biological community of interest (e.g., richness, diversity, relative abundance, tolerance, and functional feeding group) into a single numeric or categorical value representing ecological condition. considered a robust measure of water quality becuase it represents more than a snapshot in time have been around for nearly 40 years 2.3 Need MMIs are widely used by U.S. federal and state agencies to assess water quality but there is no R-package available to simplify and standardize metric calculations. "],
["r-overview.html", "3 R Overview 3.1 R Packages 3.2 R Functions 3.3 Tidyverse", " 3 R Overview 3.1 R Packages 3.2 R Functions 3.3 Tidyverse "],
["mmir-setup.html", "4 mmir Setup 4.1 Load the Package", " 4 mmir Setup Install the Multi-Metric Index (MMI) package, mmir, that I am developing from GitHub (https://github.com/zsmith27/mmir). devtools::install_github(&quot;zsmith27/mmir&quot;) 4.1 Load the Package Once mmir is installed, load the package with library(). library(mmir) "],
["required-data-format.html", "5 Required Data Format 5.1 Required Data Format Example 5.2 Data Preparation", " 5 Required Data Format Requirements Each row should represent the number of individuals enumerated for a single taxon collected during a single sampling event. There should be columns representing: a unique ID for a sampling event (i.e., key) taxonomic counts various taxonomic ranks (e.g., individual columns for order, family, genus) various taxonomic groups (e.g., tolerance values and functional feeding groups) 5.1 Required Data Format Example 5.2 Data Preparation Prepare the data for metric calculation. nest.df &lt;- onondaga %&gt;% group_nest(unique_id, .key = &quot;data&quot;) "],
["metrics.html", "6 Metrics 6.1 Metric Function List 6.2 Metric Function Arguements", " 6 Metrics Metrics: a measure of a specific aspect of a biological community. 6.1 Metric Function List Richness: taxa_rich() Relative Richness: taxa_pct_rich() Diversity Indices: taxa_div() Abundance: taxa_abund() Relative Abundance: taxa_pct() Dominance: taxa_dom() Tolerance Indices: taxa_tol() 6.2 Metric Function Arguements .data = A data frame where each row should represent the number of individuals enumerated for a single taxon collected during a single sampling event. .key_col = A single column that represents a unique ID or key (i.e., site ID) that can be used to group the data. .counts_col = A single numeric column that represents taxonomic counts. .group_col = A single column that represents a taxomic rank or group of interest. .filter = A filter to be applied to the data prior to calculation the metric of interest. "],
["richness-metrics.html", "7 Richness Metrics 7.1 Community Richness 7.2 Subset Richness", " 7 Richness Metrics Richness refers to the number of unique taxa. Typically, richness is used to refer to the number of unique species found in a sample but richness can be calculated for any taxonomic rank (e.g., order, family, genus). 7.1 Community Richness nest.df &lt;- nest.df %&gt;% dplyr::mutate( rich_family = taxa_rich(.data = ., .key_col = unique_id, .group_col = family, .unnest_col = data), rich_genus = taxa_rich(.data = ., .key_col = unique_id, .group_col = genus, .unnest_col = data) ) 7.2 Subset Richness nest.df &lt;- nest.df %&gt;% dplyr::mutate( rich_ephemeroptera_fam = taxa_rich(.data = ., .key_col = unique_id, .group_col = family, .filter = order %in% &quot;ephemeroptera&quot;, .unnest_col = data), rich_ephemeroptera_gen = taxa_rich(.data = ., .key_col = unique_id, .group_col = genus, .filter = order %in% &quot;ephemeroptera&quot;, .unnest_col = data), rich_ept_gen = taxa_rich(.data = ., .key_col = unique_id, .group_col = genus, .filter = order %in% c(&quot;ephemeroptera&quot;, &quot;plecoptera&quot;, &quot;trichoptera&quot;), .unnest_col = data) ) "],
["diversity-metrics.html", "8 Diversity Metrics 8.1 Community Diversity 8.2 Subset Diverstiy", " 8 Diversity Metrics Diversity metric in general combine the measure of taxonomic evenness and taxonomic richness. A number of diversity metrics can be calculated using taxa_div(): 1. Shannon-Wiener Diversity (“shannon”) 2. Simpson’s Diversity (“simpson”) 3. Margalef’s Diversity (“margalef”) 4. Menhinick’s Diversity (“menhinick”) 5. Pielou Evenness (“pielou”) 8.1 Community Diversity nest.df &lt;- nest.df %&gt;% dplyr::mutate( shannon_genus = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .job = &quot;shannon&quot;, .base_log = 2, .unnest_col = data), simpson_genus = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .job = &quot;simpson&quot;, .unnest_col = data), margalef_genus = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .job = &quot;margalef&quot;, .unnest_col = data), menhinick_genus = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .job = &quot;menhinick&quot;, .unnest_col = data), pielou_genus = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .job = &quot;pielou&quot;, .unnest_col = data) ) 8.2 Subset Diverstiy nest.df &lt;- nest.df %&gt;% dplyr::mutate( simpson_gen_ept = taxa_div(.data = ., .key_col = unique_id, .counts_col = reporting_value, .group_col = genus, .filter = order %in% c(&quot;ephemeroptera&quot;, &quot;plecoptera&quot;, &quot;trichoptera&quot;), .job = &quot;simpson&quot;, .unnest_col = data)) "],
["abundance-and-relative-abundance-metrics.html", "9 Abundance and Relative Abundance (%) Metrics 9.1 Subset Relative Abundance (%)", " 9 Abundance and Relative Abundance (%) Metrics Abundance refers to the total count of all taxa observed during a sampling event. We can apply a filter to this metric as well to focus on specific aspects of the community, such as the abundance of EPT. nest.df &lt;- nest.df %&gt;% dplyr::mutate( abundance = taxa_abund(., .key_col = unique_id, .counts_col = reporting_value), abund_ept = taxa_abund(., .key_col = unique_id, .counts_col = reporting_value, .filter = order %in% c(&quot;ephemeroptera&quot;, &quot;plecoptera&quot;, &quot;trichoptera&quot;)) ) 9.1 Subset Relative Abundance (%) Generally, abundance metrics are better represented on a normalized scale. Calculating the relative abundance (percentage) of a subset metrics should provide a more robust measure than raw abundance measures. nest.df &lt;- nest.df %&gt;% dplyr::mutate( pct_ephemeroptera = taxa_pct(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter = order %in% &quot;ephemeroptera&quot;), pct_ept = taxa_pct(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter = order %in% c(&quot;ephemeroptera&quot;, &quot;plecoptera&quot;, &quot;trichoptera&quot;)) ) "],
["sequence-through-multiple-metrics.html", "10 Sequence Through Multiple Metrics", " 10 Sequence Through Multiple Metrics seq.df &lt;- nest.df %&gt;% bind_cols( taxa_seq(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter_cols_vec = c(&quot;class&quot;, &quot;order&quot;, &quot;family&quot;), .group_col = genus, .job = &quot;rich&quot;, .unnest_col = data)) nest.df &lt;- nest.df %&gt;% bind_cols( taxa_seq(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter_cols_vec = c(&quot;class&quot;, &quot;order&quot;, &quot;family&quot;), .group_col = genus, .job = &quot;rich&quot;), taxa_seq(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter_cols_vec = c(&quot;class&quot;, &quot;order&quot;, &quot;family&quot;), .group_col = genus, .job = &quot;pct&quot;), taxa_seq(.data = ., .key_col = unique_id, .counts_col = reporting_value, .filter_cols_vec = c(&quot;class&quot;, &quot;order&quot;, &quot;family&quot;), .group_col = genus, .base_log = 2, .job = &quot;shannon&quot;)) ## Warning in instance$preRenderHook(instance): It seems your data is too big for client-side ## DataTables. You may consider server-side processing: https://rstudio.github.io/DT/server.html "],
["metric-selection.html", "11 Metric Selection", " 11 Metric Selection "],
["acknowledgements.html", "12 Acknowledgements", " 12 Acknowledgements Interstate Commission on the Potomac River Basin (ICPRB) With a special thank you to Dr. Claire Buchanan New York State Department of Environmental Conservation (NYSDEC) With a special thank you to Dr. Alexander J. Smith "],
["contact-information.html", "13 Contact Information", " 13 Contact Information Name: Zachary M. Smith Email: zachary.smith2@dec.ny.gov GitHub: https://github.com/zsmith27 mmir: https://github.com/zsmith27/mmir "]
]
